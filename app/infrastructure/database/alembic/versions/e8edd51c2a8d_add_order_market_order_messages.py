"""add order, market, order_messages

Revision ID: e8edd51c2a8d
Revises: 65ee8401cea8
Create Date: 2022-06-13 01:34:43.044118

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e8edd51c2a8d"
down_revision = "65ee8401cea8"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "goods",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.TEXT(), nullable=False),
        sa.Column("type", sa.Enum("GOODS", "FOLDER", name="goodstype"), nullable=False),
        sa.Column("parent_id", postgresql.UUID(as_uuid=True), nullable=True),
        sa.Column(
            "parent_type", sa.Enum("GOODS", "FOLDER", name="goodstype"), nullable=True
        ),
        sa.Column("sku", sa.TEXT(), nullable=True),
        sa.Column("is_active", sa.BOOLEAN(), nullable=False),
        sa.CheckConstraint(
            "(type in ('FOLDER') AND sku IS NULL) or type in ('GOODS')",
            name="ck_folder_sku_null",
        ),
        sa.CheckConstraint(
            "(type in ('GOODS') AND sku IS NOT NULL) or type in ('FOLDER')",
            name="ck_goods_sku_not_null",
        ),
        sa.CheckConstraint("parent_type not in ('GOODS')"),
        sa.ForeignKeyConstraint(
            ["parent_id", "parent_type"],
            ["goods.id", "goods.type"],
            name="fk_goods_goods",
            onupdate="CASCADE",
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("id", "type", name="uq_goods_id_type"),
    )
    op.create_table(
        "market",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("name", sa.TEXT(), nullable=False),
        sa.Column("is_active", sa.BOOLEAN(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("creator_id", sa.INTEGER(), nullable=False),
        sa.Column(
            "created_at", sa.DateTime(), server_default=sa.text("now()"), nullable=False
        ),
        sa.Column("confirmed_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=True),
        sa.Column("recipient_market_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("commentary", sa.TEXT(), nullable=False),
        sa.Column(
            "confirmed",
            sa.Enum("YES", "NO", "NOT_PROCESSED", name="confirmedstatus"),
            server_default="NOT_PROCESSED",
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["creator_id"], ["user.id"], onupdate="CASCADE", ondelete="RESTRICT"
        ),
        sa.ForeignKeyConstraint(
            ["recipient_market_id"],
            ["market.id"],
            onupdate="CASCADE",
            ondelete="RESTRICT",
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_line",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("order_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("goods_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "goods_type", sa.Enum("GOODS", "FOLDER", name="goodstype"), nullable=False
        ),
        sa.Column("quantity", sa.BIGINT(), nullable=False),
        sa.CheckConstraint("goods_type in ('GOODS')"),
        sa.ForeignKeyConstraint(
            ["goods_id", "goods_type"],
            ["goods.id", "goods.type"],
            name="fk_order_line_goods",
            onupdate="CASCADE",
            ondelete="RESTRICT",
        ),
        sa.ForeignKeyConstraint(
            ["order_id"], ["order.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "order_message",
        sa.Column(
            "id",
            postgresql.UUID(as_uuid=True),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("order_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column("message_id", sa.INTEGER(), nullable=False),
        sa.Column("chat_id", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(
            ["order_id"], ["order.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("order_message")
    op.drop_table("order_line")
    op.drop_table("order")
    op.drop_table("market")
    op.drop_table("goods")
    # ### end Alembic commands ###
