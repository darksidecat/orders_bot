"""init

Revision ID: 65ee8401cea8
Revises: 
Create Date: 2022-05-30 14:09:33.890269

"""
import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
from sqlalchemy import orm

from app.infrastructure.database.models.user import UpdatedLevels, access_level_table

revision = "65ee8401cea8"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "access_level",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column(
            "name",
            sa.Enum("BLOCKED", "USER", "ADMINISTRATOR", name="levelname"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user",
        sa.Column("id", sa.BIGINT(), nullable=False),
        sa.Column("name", sa.TEXT(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_access_levels",
        sa.Column("user_id", sa.BIGINT(), nullable=False),
        sa.Column("access_level_id", sa.INTEGER(), nullable=False),
        sa.ForeignKeyConstraint(
            ["access_level_id"],
            ["access_level.id"],
            onupdate="CASCADE",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["user.id"], onupdate="CASCADE", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("user_id", "access_level_id"),
    )

    bind = op.get_bind()
    session = orm.Session(bind=bind)
    session.add_all(
        (
            UpdatedLevels.BLOCKED.value,
            UpdatedLevels.USER.value,
            UpdatedLevels.ADMINISTRATOR.value,
        )
    )
    session.commit()
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("user_access_levels")
    op.drop_table("user")
    op.drop_table("access_level")
    # ### end Alembic commands ###
